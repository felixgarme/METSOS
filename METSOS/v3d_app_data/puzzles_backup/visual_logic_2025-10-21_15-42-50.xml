<xml xmlns="http://www.w3.org/1999/xhtml">
  <tab name="Init" type="InitTab" active="false" scrollx="1602.75" scrolly="0" scale="0.9"></tab>
  <tab name="New Tab" type="CommonTab" active="true" scrollx="673.5762634277344" scrolly="-185.75" scale="1">
    <block xmlns="https://developers.google.com/blockly/xml" type="connectorSlot" id="-iJ-sL6.kR)?;Mpp(@2j" x="-315" y="324">
      <statement name="DO">
        <block type="execScript" id="#kQNJYlTDnyY..(9!!Nn">
          <value name="TEXT">
            <shadow type="textMultiline" id="wf%u4x(BiO0H_{79BMS1">
              <field name="HIGHLIGHT_MODE">javascript</field>
              <field name="TEXT" editor-height="4" editor-width="475">window.app = app; &amp;#10;import("./imports.js");&amp;#10;</field>
            </shadow>
          </value>
          <next>
            <block type="addFog" id="FVk}t5;mlBJQDQfIR^[s">
              <mutation xmlns="http://www.w3.org/1999/xhtml" has_near_far_opts="true"></mutation>
              <value name="R">
                <shadow type="math_number" id="Hfe~cSLgc?o?LK;af#K5">
                  <field name="NUM">185</field>
                </shadow>
              </value>
              <value name="G">
                <shadow type="math_number" id="[6Uv].E.F)pZ!UIv)vjy">
                  <field name="NUM">200</field>
                </shadow>
              </value>
              <value name="B">
                <shadow type="math_number" id="~S@^1^yC~%njxx7:#D6r">
                  <field name="NUM">215</field>
                </shadow>
              </value>
              <value name="NEAR">
                <shadow type="math_number" id="VxC(JWvBT{Apz^Y[]3?B">
                  <field name="NUM">1</field>
                </shadow>
              </value>
              <value name="FAR">
                <shadow type="math_number" id="#AQtMkI/Mya`9;mEv.~$">
                  <field name="NUM">10000</field>
                </shadow>
              </value>
              <next>
                <block type="procedures_callnoreturn" id="m!bWZ!.%biYm^adol?zF">
                  <mutation name="posA"></mutation>
                </block>
              </next>
            </block>
          </next>
        </block>
      </statement>
    </block>
    <block xmlns="https://developers.google.com/blockly/xml" type="procedures_defnoreturn" id="4iT;w8]li-X^rtaqfc7C" x="-295" y="656">
      <field name="NAME">posA</field>
      <comment pinned="false" h="80" w="160">Describe this function...</comment>
      <statement name="STACK">
        <block type="tweenCameraExt" id="o(rG5;GdCdJP|g4dYc[h">
          <mutation xmlns="http://www.w3.org/1999/xhtml" whenfinishedslot="false"></mutation>
          <field name="MOVEMENT_TYPE">LINEAR</field>
          <value name="POSITION">
            <block type="objectList" id="GD=I+{ha3):bn:*AFi}p">
              <field name="FIELDNAME">A</field>
            </block>
          </value>
          <value name="LOOKAT">
            <block type="objectList" id="2]/u8,4ca5{tY2`]fX^0">
              <field name="FIELDNAME">general</field>
            </block>
          </value>
          <value name="DURATION">
            <shadow type="math_number" id="l@0v:?8,JG_OR!CAn$H:">
              <field name="NUM">1</field>
            </shadow>
          </value>
          <next>
            <block type="execScript" id="V*1g#eov6j3)0OX[,`cy">
              <value name="TEXT">
                <shadow type="textMultiline" id="5SbIn2z6`+iv{r3v1G{w">
                  <field name="HIGHLIGHT_MODE">javascript</field>
                  <field name="TEXT" editor-height="4" editor-width="475">// Supongamos que ya tienes algo así:&amp;#10;// app — instancia de Verge3D&amp;#10;// app.camera  — la cámara activa&amp;#10;// app.controls — los controles OrbitControls asignados a la cámara&amp;#10;&amp;#10;// Valor en radianes para 180 grados:&amp;#10;const halfTurn = Math.PI;  &amp;#10;&amp;#10;// Obtenemos la rotación actual en el ángulo azimutal (horizontal):&amp;#10;const currentAzimuth = app.controls.getAzimuthalAngle();  &amp;#10;&amp;#10;// Calculamos el nuevo ángulo:&amp;#10;const targetAzimuth = currentAzimuth + halfTurn;  &amp;#10;&amp;#10;// Configuramos la posición de la cámara en función del nuevo ángulo,&amp;#10;// manteniendo la misma distancia al target (y los otros parámetros):&amp;#10;const distance = app.controls.getDistance();&amp;#10;&amp;#10;// suponer que el objetivo (target) se encuentra en app.controls.target&amp;#10;const targetPoint = app.controls.target.clone();&amp;#10;&amp;#10;// calculamos la nueva posición:&amp;#10;const x = targetPoint.x + distance * Math.cos(targetAzimuth);&amp;#10;const z = targetPoint.z + distance * Math.sin(targetAzimuth);&amp;#10;const y = app.camera.position.y;  // mantenemos misma altura Y&amp;#10;&amp;#10;app.camera.position.set(x, y, z);&amp;#10;app.camera.lookAt(targetPoint);&amp;#10;&amp;#10;// Actualizamos los controles para que registren el cambio:&amp;#10;app.controls.update();&amp;#10;</field>
                </shadow>
              </value>
            </block>
          </next>
        </block>
      </statement>
    </block>
  </tab>
  <editorsettings viewport-x="1180.1999999999998" viewport-y="37" viewport-w="798.8" viewport-h="448.5" viewport-hidden="true" toolbox-library-mode="false" toolbox-minimized-mode="false"></editorsettings>
</xml>